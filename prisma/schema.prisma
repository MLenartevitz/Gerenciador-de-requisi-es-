generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Empresas {
  cod_empresa  Int           @id @default(autoincrement())
  nome_empresa String
  CNPJ_empresa String        @unique
  Projetos     Projeto[]
  Requisicoes  Requisicoes[]
}

model Cliente {
  cod_cliente  Int       @id @default(autoincrement())
  nome_cliente String
  CNPJ_cliente String    @unique
  Projetos     Projeto[]
}

model Projeto {
  cod_proj       Int           @id @default(autoincrement())
  num_proposta   Int
  titulo         String
  cod_empresa    Int
  cod_cliente    Int
  data_entrega   DateTime
  num_pedido     Int
  num_itempedido Int
  data_pedido    DateTime
  resp_pedido    String
  status         Boolean
  empresa        Empresas      @relation(fields: [cod_empresa], references: [cod_empresa])
  cliente        Cliente       @relation(fields: [cod_cliente], references: [cod_cliente])
  Requisicoes    Requisicoes[]
  cotacoes       Cotacoes[] // Relacionamento com Cotacao
}

model Usuario {
  cod_user     Int                      @id @default(autoincrement()) // Chave primária com auto incremento
  nome_user    String // Nome do usuário
  funcao       String // Função do usuário
  senha        String // Campo para armazenar o hash da senha
  data_inicio  DateTime // Data de início do usuário
  data_inativo DateTime? // Data em que o usuário foi desativado (opcional)
  ativo        Boolean // Status ativo ou inativo do usuário
  Requisicoes  Requisicoes[] // Relacionamento com o modelo de Requisições
  Controle     Controle_saida_retorno[]
  Epi          Epi_descartaveis[]
}

model Produtos {
  cod_produto    Int    @id @default(autoincrement())
  cod_omie       Int
  nome_produto   String
  qtde           Int
  unidade_medida String
}

model Requisicoes {
  num_requisicao  Int               @id @default(autoincrement())
  cod_proj        Int
  cod_empresa     Int
  data_requisicao DateTime
  cod_user        Int
  rev_req         String
  empresa         Empresas          @relation(fields: [cod_empresa], references: [cod_empresa])
  projeto         Projeto           @relation(fields: [cod_proj], references: [cod_proj])
  usuario         Usuario           @relation(fields: [cod_user], references: [cod_user])
  ItensRequisicao Item_requisicao[]
  cotacoes        Cotacoes[] // Relacionamento com Cotacao
}

model Item_requisicao {
  num_item_req   Int         @id @default(autoincrement()) // ID do item
  descricao      String
  qtde           Int
  observacao     String
  requisicao     Requisicoes @relation(fields: [num_requisicao], references: [num_requisicao])
  num_requisicao Int
  ordem_item     Int
  unidade_medida String
}

model Fornecedores {
  cod_fornecedor Int    @id @default(autoincrement()) // Chave primária
  nome           String
  endereco       String
  email          String @unique // Email será único
  telefone       String
  tipo_peca      String
  quantidade     Int
  marca          String
  descricao      String
  responsavel    String
}

model Cotacoes {
  id             Int      @id @default(autoincrement())
  nomeFornecedor String
  localCotacao   String
  nomeArquivo    String
  status         String   @default("pendente")
  dataEnvio      DateTime @default(now())

  projetoId Int? // <-- chave estrangeira opcional
  projeto   Projeto? @relation(fields: [projetoId], references: [cod_proj])

  requisicaoId Int?
  requisicoes  Requisicoes? @relation(fields: [requisicaoId], references: [num_requisicao])

  aprovadoPor   String?
  dataAprovacao DateTime?

  recusadoPor String?
  dataRecusa  DateTime?
  motivorec   String?
}

model Carro {
  placa    String @id @unique
  marca    String
  modelo   String
  status   String @default("ativo")
  Controle Controle_saida_retorno[]
}

model Controle_saida_retorno {
  cod_evento    Int @id @default(autoincrement())
  tipo_evento   Boolean
  data_controle DateTime
  placa         String
  cod_user      Int
  km            Int
  nomeArquivo   String
  observacao    String
  usuario       Usuario  @relation(fields: [cod_user], references: [cod_user])
  carro         Carro    @relation(fields: [placa], references: [placa])
}

model Epi_descartaveis {
  cod_epid       Int      @id @default(autoincrement())
  cod_user       Int
  data_retirada  DateTime
  quantidadeOculos   Int
  quantidadeProtetor Int
  quantidadeLuvas    Int
  quantidadeMascara  Int
  caOculos       String     @default("-")
  caProtetor     String     @default("-")
  caLuvas        String     @default("-")
  caMascara      String     @default("-")
  usuario        Usuario  @relation(fields: [cod_user], references: [cod_user])
}
